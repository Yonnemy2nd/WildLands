package superlord.wildlands.init;

import net.minecraft.fluid.Fluids;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Food;
import net.minecraft.item.Item;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import superlord.wildlands.WildLands;
import superlord.wildlands.entity.WLBoatEntity;
import superlord.wildlands.item.CoconutItem;
import superlord.wildlands.item.WLBoatItem;
import superlord.wildlands.item.WLBucketItem;
import superlord.wildlands.item.WLSpawnEggItem;

public class ItemInit {

	public static final DeferredRegister<Item> REGISTER = DeferredRegister.create(ForgeRegistries.ITEMS, WildLands.MOD_ID);

	public static final RegistryObject<Item> OLIVINE = REGISTER.register("olivine", () -> new Item(new Item.Properties().group(WildLands.ITEM_GROUP)));
	public static final RegistryObject<Item> PEARL = REGISTER.register("pearl", () -> new Item(new Item.Properties().group(WildLands.ITEM_GROUP)));
	public static final RegistryObject<BlockItem> MUD = REGISTER.register("mud", () -> new BlockItem(BlockInit.MUD.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> DRIED_MUD = REGISTER.register("dried_mud", () -> new BlockItem(BlockInit.DRIED_MUD.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> MUD_BRICKS = REGISTER.register("dried_mud_bricks", () -> new BlockItem(BlockInit.MUD_BRICKS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> MUD_SHINGLES = REGISTER.register("dried_mud_shingles", () -> new BlockItem(BlockInit.MUD_SHINGLES.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_LOG = REGISTER.register("cypress_log", () -> new BlockItem(BlockInit.CYPRESS_LOG.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> STRIPPED_CYPRESS_LOG = REGISTER.register("stripped_cypress_log", () -> new BlockItem(BlockInit.STRIPPED_CYPRESS_LOG.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_LOG = REGISTER.register("coconut_log", () -> new BlockItem(BlockInit.COCONUT_LOG.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> STRIPPED_COCONUT_LOG = REGISTER.register("stripped_coconut_log", () -> new BlockItem(BlockInit.STRIPPED_COCONUT_LOG.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_WOOD = REGISTER.register("cypress_wood", () -> new BlockItem(BlockInit.CYPRESS_WOOD.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> STRIPPED_CYPRESS_WOOD = REGISTER.register("stripped_cypress_wood", () -> new BlockItem(BlockInit.STRIPPED_CYPRESS_WOOD.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_WOOD = REGISTER.register("coconut_wood", () -> new BlockItem(BlockInit.COCONUT_WOOD.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> STRIPPED_COCONUT_WOOD = REGISTER.register("stripped_coconut_wood", () -> new BlockItem(BlockInit.STRIPPED_COCONUT_WOOD.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_PLANKS = REGISTER.register("cypress_planks", () -> new BlockItem(BlockInit.CYPRESS_PLANKS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_PLANKS = REGISTER.register("coconut_planks", () -> new BlockItem(BlockInit.COCONUT_PLANKS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_DOOR = REGISTER.register("cypress_door", () -> new BlockItem(BlockInit.CYPRESS_DOOR.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_DOOR = REGISTER.register("coconut_door", () -> new BlockItem(BlockInit.COCONUT_DOOR.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_LEAVES = REGISTER.register("cypress_leaves", () -> new BlockItem(BlockInit.CYPRESS_LEAVES.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_LEAVES = REGISTER.register("coconut_leaves", () -> new BlockItem(BlockInit.COCONUT_LEAVES.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_STAIRS = REGISTER.register("cypress_stairs", () -> new BlockItem(BlockInit.CYPRESS_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_STAIRS = REGISTER.register("coconut_stairs", () -> new BlockItem(BlockInit.COCONUT_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_PRESSURE_PLATE = REGISTER.register("cypress_pressure_plate", () -> new BlockItem(BlockInit.CYPRESS_PRESSURE_PLATE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_PRESSURE_PLATE = REGISTER.register("coconut_pressure_plate", () -> new BlockItem(BlockInit.COCONUT_PRESSURE_PLATE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_BUTTON = REGISTER.register("cypress_button", () -> new BlockItem(BlockInit.CYPRESS_BUTTON.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_BUTTON = REGISTER.register("coconut_button", () -> new BlockItem(BlockInit.COCONUT_BUTTON.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_FENCE = REGISTER.register("cypress_fence", () -> new BlockItem(BlockInit.CYPRESS_FENCE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_FENCE = REGISTER.register("coconut_fence", () -> new BlockItem(BlockInit.COCONUT_FENCE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_TRAPDOOR = REGISTER.register("cypress_trapdoor", () -> new BlockItem(BlockInit.CYPRESS_TRAPDOOR.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_TRAPDOOR = REGISTER.register("coconut_trapdoor", () -> new BlockItem(BlockInit.COCONUT_TRAPDOOR.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_FENCE_GATE = REGISTER.register("cypress_fence_gate", () -> new BlockItem(BlockInit.CYPRESS_FENCE_GATE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_FENCE_GATE = REGISTER.register("coconut_fence_gate", () -> new BlockItem(BlockInit.COCONUT_FENCE_GATE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_SLAB = REGISTER.register("cypress_slab", () -> new BlockItem(BlockInit.CYPRESS_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_SLAB = REGISTER.register("coconut_slab", () -> new BlockItem(BlockInit.COCONUT_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> WET_CYPRESS_LOG = REGISTER.register("wet_cypress_log", () -> new BlockItem(BlockInit.WET_CYPRESS_LOG.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CYPRESS_SAPLING = REGISTER.register("cypress_sapling", () -> new BlockItem(BlockInit.CYPRESS_SAPLING.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> COCONUT_SAPLING = REGISTER.register("coconut_sapling", () -> new BlockItem(BlockInit.COCONUT_SAPLING.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> PALMETTO = REGISTER.register("palmetto", () -> new BlockItem(BlockInit.PALMETTO.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<Item> RAW_CATFISH = REGISTER.register("raw_catfish", () -> new Item(new Item.Properties().group(WildLands.ITEM_GROUP).food(new Food.Builder().hunger(3).saturation(0.1F).meat().build())));
	public static final RegistryObject<Item> COOKED_CATFISH = REGISTER.register("cooked_catfish", () -> new Item(new Item.Properties().group(WildLands.ITEM_GROUP).food(new Food.Builder().hunger(8).saturation(0.8F).meat().build())));
	public static final RegistryObject<WLBucketItem> CATFISH_BUCKET = REGISTER.register("catfish_bucket", () -> new WLBucketItem(EntityInit.CATFISH, () -> Fluids.WATER, new Item.Properties().group(WildLands.ITEM_GROUP).maxStackSize(1)));
	public static final RegistryObject<WLBucketItem> ALLIGATOR_BUCKET = REGISTER.register("alligator_bucket", () -> new WLBucketItem(EntityInit.ALLIGATOR, () -> Fluids.WATER, new Item.Properties().group(WildLands.ITEM_GROUP).maxStackSize(1)));
	public static final RegistryObject<WLBucketItem> FROG_BUCKET = REGISTER.register("frog_bucket", () -> new WLBucketItem(EntityInit.FROG, () -> Fluids.WATER, new Item.Properties().group(WildLands.ITEM_GROUP).maxStackSize(1)));
	public static final RegistryObject<Item> CATFISH_SPAWN_EGG = REGISTER.register("catfish_spawn_egg", () -> new WLSpawnEggItem(EntityInit.CATFISH, 0xC9A764, 0x7E774F, new Item.Properties().group(WildLands.SPAWN_EGG_GROUP)));
	public static final RegistryObject<Item> ALLIGATOR_SPAWN_EGG = REGISTER.register("alligator_spawn_egg", () -> new WLSpawnEggItem(EntityInit.ALLIGATOR, 0x5A6C43, 0x89915A, new Item.Properties().group(WildLands.SPAWN_EGG_GROUP)));
	public static final RegistryObject<Item> CRAB_SPAWN_EGG = REGISTER.register("crab_spawn_egg", () -> new WLSpawnEggItem(EntityInit.CRAB, 0x872B2F, 0xE74D3C, new Item.Properties().group(WildLands.SPAWN_EGG_GROUP)));
	public static final RegistryObject<BlockItem> CONGLOMERATE = REGISTER.register("conglomerate", () -> new BlockItem(BlockInit.CONGLOMERATE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CONGLOMERATE_SLAB = REGISTER.register("conglomerate_slab", () -> new BlockItem(BlockInit.CONGLOMERATE_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CONGLOMERATE_STAIRS = REGISTER.register("conglomerate_stairs", () -> new BlockItem(BlockInit.CONGLOMERATE_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CONGLOMERATE_BRICKS = REGISTER.register("conglomerate_bricks", () -> new BlockItem(BlockInit.CONGLOMERATE_BRICKS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CONGLOMERATE_BRICK_SLAB = REGISTER.register("conglomerate_brick_slab", () -> new BlockItem(BlockInit.CONGLOMERATE_BRICK_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CONGLOMERATE_BRICK_STAIRS = REGISTER.register("conglomerate_brick_stairs", () -> new BlockItem(BlockInit.CONGLOMERATE_BRICK_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CONGLOMERATE_BRICK_WALL = REGISTER.register("conglomerate_brick_wall", () -> new BlockItem(BlockInit.CONGLOMERATE_BRICK_WALL.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> GABBRO = REGISTER.register("gabbro", () -> new BlockItem(BlockInit.GABBRO.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> OLIVINE_GABBRO = REGISTER.register("olivine_gabbro", () -> new BlockItem(BlockInit.OLIVINE_GABBRO.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> GABBRO_SLAB = REGISTER.register("gabbro_slab", () -> new BlockItem(BlockInit.GABBRO_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> GABBRO_STAIRS = REGISTER.register("gabbro_stairs", () -> new BlockItem(BlockInit.GABBRO_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> GABBRO_WALL = REGISTER.register("gabbro_wall", () -> new BlockItem(BlockInit.GABBRO_WALL.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> POLISHED_GABBRO = REGISTER.register("polished_gabbro", () -> new BlockItem(BlockInit.POLISHED_GABBRO.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> POLISHED_GABBRO_SLAB = REGISTER.register("polished_gabbro_slab", () -> new BlockItem(BlockInit.POLISHED_GABBRO_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> POLISHED_GABBRO_STAIRS = REGISTER.register("polished_gabbro_stairs", () -> new BlockItem(BlockInit.POLISHED_GABBRO_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> DOLERITE = REGISTER.register("dolerite", () -> new BlockItem(BlockInit.DOLERITE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> DOLERITE_SLAB = REGISTER.register("dolerite_slab", () -> new BlockItem(BlockInit.DOLERITE_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> DOLERITE_STAIRS = REGISTER.register("dolerite_stairs", () -> new BlockItem(BlockInit.DOLERITE_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> DOLERITE_WALL = REGISTER.register("dolerite_wall", () -> new BlockItem(BlockInit.DOLERITE_WALL.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> POLISHED_DOLERITE = REGISTER.register("polished_dolerite", () -> new BlockItem(BlockInit.POLISHED_DOLERITE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> POLISHED_DOLERITE_SLAB = REGISTER.register("polished_dolerite_slab", () -> new BlockItem(BlockInit.POLISHED_DOLERITE_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> POLISHED_DOLERITE_STAIRS = REGISTER.register("polished_dolerite_stairs", () -> new BlockItem(BlockInit.POLISHED_DOLERITE_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> FINE_SAND = REGISTER.register("fine_sand", () -> new BlockItem(BlockInit.FINE_SAND.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> FINE_SANDSTONE = REGISTER.register("fine_sandstone", () -> new BlockItem(BlockInit.FINE_SANDSTONE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> FINE_SANDSTONE_SLAB = REGISTER.register("fine_sandstone_slab", () -> new BlockItem(BlockInit.FINE_SANDSTONE_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> FINE_SANDSTONE_STAIRS = REGISTER.register("fine_sandstone_stairs", () -> new BlockItem(BlockInit.FINE_SANDSTONE_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> FINE_SANDSTONE_WALL = REGISTER.register("fine_sandstone_wall", () -> new BlockItem(BlockInit.FINE_SANDSTONE_WALL.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> SMOOTH_FINE_SANDSTONE = REGISTER.register("smooth_fine_sandstone", () -> new BlockItem(BlockInit.SMOOTH_FINE_SANDSTONE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> SMOOTH_FINE_SANDSTONE_SLAB = REGISTER.register("smooth_fine_sandstone_slab", () -> new BlockItem(BlockInit.SMOOTH_FINE_SANDSTONE_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> SMOOTH_FINE_SANDSTONE_STAIRS = REGISTER.register("smooth_fine_sandstone_stairs", () -> new BlockItem(BlockInit.SMOOTH_FINE_SANDSTONE_STAIRS.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CUT_FINE_SANDSTONE = REGISTER.register("cut_fine_sandstone", () -> new BlockItem(BlockInit.CUT_FINE_SANDSTONE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CUT_FINE_SANDSTONE_SLAB = REGISTER.register("cut_fine_sandstone_slab", () -> new BlockItem(BlockInit.CUT_FINE_SANDSTONE_SLAB.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> OLIVINE_BLOCK = REGISTER.register("olivine_block", () -> new BlockItem(BlockInit.OLIVINE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CUT_OLIVINE_BLOCK = REGISTER.register("cut_olivine_block", () -> new BlockItem(BlockInit.CUT_OLIVINE.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> PEARL_BLOCK = REGISTER.register("pearl_block", () -> new BlockItem(BlockInit.PEARL.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> PEARL_TILE_BLOCK = REGISTER.register("pearl_tile_block", () -> new BlockItem(BlockInit.PEARL_TILES.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<CoconutItem> COCONUT = REGISTER.register("coconut", () -> new CoconutItem(BlockInit.COCONUT.get(), BlockInit.WALL_COCONUT.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> BLUE_STARFISH = REGISTER.register("blue_starfish", () -> new BlockItem(BlockInit.BLUE_STARFISH.get(), new Item.Properties().group(WildLands.BLOCK_GROUP).maxStackSize(1)));
	public static final RegistryObject<BlockItem> MAGENTA_STARFISH = REGISTER.register("magenta_starfish", () -> new BlockItem(BlockInit.MAGENTA_STARFISH.get(), new Item.Properties().group(WildLands.BLOCK_GROUP).maxStackSize(1)));
	public static final RegistryObject<BlockItem> ORANGE_STARFISH = REGISTER.register("orange_starfish", () -> new BlockItem(BlockInit.ORANGE_STARFISH.get(), new Item.Properties().group(WildLands.BLOCK_GROUP).maxStackSize(1)));
	public static final RegistryObject<BlockItem> PINK_STARFISH = REGISTER.register("pink_starfish", () -> new BlockItem(BlockInit.PINK_STARFISH.get(), new Item.Properties().group(WildLands.BLOCK_GROUP).maxStackSize(1)));
	public static final RegistryObject<BlockItem> RED_STARFISH = REGISTER.register("red_starfish", () -> new BlockItem(BlockInit.RED_STARFISH.get(), new Item.Properties().group(WildLands.BLOCK_GROUP).maxStackSize(1)));

	public static final RegistryObject<BlockItem> SEAWEED_BLOCK = REGISTER.register("seaweed_block", () -> new BlockItem(BlockInit.SEAWEED_BLOCK.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	
	public static final RegistryObject<BlockItem> CRAB_SAND = REGISTER.register("crab_sand", () -> new BlockItem(BlockInit.CRAB_SAND.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	public static final RegistryObject<BlockItem> CRAB_FINE_SAND = REGISTER.register("crab_fine_sand", () -> new BlockItem(BlockInit.CRAB_FINE_SAND.get(), new Item.Properties().group(WildLands.BLOCK_GROUP)));
	
	public static final RegistryObject<WLBoatItem> BALD_CYPRESS_BOAT = REGISTER.register("bald_cypress_boat", () -> new WLBoatItem(WLBoatEntity.WLType.BALD_CYPRESS, (new Item.Properties().maxStackSize(1).group(WildLands.ITEM_GROUP))));
	public static final RegistryObject<WLBoatItem> COCONUT_BOAT = REGISTER.register("coconut_boat", () -> new WLBoatItem(WLBoatEntity.WLType.COCONUT, (new Item.Properties().maxStackSize(1).group(WildLands.ITEM_GROUP))));
	public static final RegistryObject<Item> FROG_SPAWN_EGG = REGISTER.register("frog_spawn_egg", () -> new WLSpawnEggItem(EntityInit.FROG, 0x4C7D3C, 0xCAD257, new Item.Properties().group(WildLands.SPAWN_EGG_GROUP)));

	public static final RegistryObject<Item> CLAM_SPAWN_EGG = REGISTER.register("clam_spawn_egg", () -> new WLSpawnEggItem(EntityInit.CLAM, 0x674F57, 0xE2C19D, new Item.Properties().group(WildLands.SPAWN_EGG_GROUP)));
	
}
